---
interface Props {
	title: string;
}

const { title } = Astro.props;
---

<!doctype html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="description" content="Astro description" />
		<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
		<meta name="generator" content={Astro.generator} />
		<title>{title}</title>
	</head>
	
	<body>
		<nav class="navbar navbar-expand-lg bg-body-tertiary">
			<div class="container-fluid">
			  <a class="navbar-brand" href="#">CRÃ˜WDSPARK</a>
			  <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
				<span class="navbar-toggler-icon"></span>
			  </button>
			  <div class="collapse navbar-collapse" id="navbarSupportedContent">
				<ul class="navbar-nav me-auto mb-2 mb-lg-0">
				  <li class="nav-item">
					<a class="nav-link active" aria-current="page" href="/">Home</a>
				  </li>
				  <li class="nav-item">
					<a class="nav-link active" href="/lending">Funding</a>
				  </li>
				</ul>
				<div class="d-flex align-items-center">
					<ul class="navbar-nav me-auto mb-2 mb-lg-0">
						<li class="nav-item">
							<div id="connect-wrap" class="wrap" aria-live="polite">
								<div class="ellipsis">
							<button data-connect aria-controls="connect-wrap" class="btn btn-success"">Connect</button>
						</div>
						</li>
					</ul>
					<form class="d-flex ms-3" role="search">
						<input class="form-control me-2" type="search" placeholder="Search" aria-label="Search">
						<button class="btn btn-outline-success" type="submit">Search</button>
					</form>
				</div>
			  </div>
			</div>
		  </nav>
		<slot />
	</body>
</html>
<script>
	import { kit, setPublicKey } from "../stellar-wallets-kit";
	import ConnectWallet from '../components/Card.astro'
	const ellipsis = document.querySelector("#connect-wrap .ellipsis");
	const button = document.querySelector("[data-connect]");
  
	async function setLoggedIn(publicKey: string) {
	  ellipsis.innerHTML = `Signed in as ${publicKey}`;
	  ellipsis.title = publicKey;
	}
  
	button.addEventListener("click", async () => {
	  button.disabled = true;
  
	  try {
		await kit.openModal({
		  onWalletSelected: async (option) => {
			try {
			  kit.setWallet(option.id);
			  const { address } = await kit.getAddress();
			  setPublicKey(address);
			  await setLoggedIn(address);
			} catch (e) {
			  console.error(e);
			}
		  },
		});
	  } catch (e) {
		console.error(e);
	  }
  
	  button.disabled = false;
	});
  </script>